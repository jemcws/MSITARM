{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 3,
      "maxLength": 13,
      "metadata": {
        "description": "Name for the Virtual Machine. Name will be iterated for each VM starting at 1."
      }
    },
    "AvailabilitySet": {
      "type": "string",
      "defaultValue": "AvSet",
      "minLength": 3,
      "metadata": {
        "description": "Name for the AvailabilitySet."
      }
    },
    "loadBalancerName": {
      "type": "string",
      "defaultValue": "WEBILB",
      "minLength": 3,
      "metadata": {
        "description": "Name for the LoadBalancer."
      }
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "Description": "Number of Azure VM to create."
      }
    },
    "localAdminUserName": {
      "type": "string",
      "defaultValue": "ITSVC0",
      "minLength": 1,
      "metadata": {
        "description": "Local Username for the Virtual Machine."
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "Local Password for the Virtual Machine."
      }
    },
    "domainJoinUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Account for domain joining. Example: redmond\\serviceaccount"
      }
    },
    "domainJoinPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
          "description": "Password for domain joining"
      }
    },
    "localAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Users and groups added to the local administrator group.  For SQL, SQL AO, and Web ILB templates, keep the Redmond\\SQLSvcAccounts value. Example: Redmond\\SQLSvcAccounts,redmond\\serviceaccount,redmond\\teamgroup"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
      "description": "Size for the Virtual Machine. Details: https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-linux-sizes?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#standard-tier-d-series"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "allowedValues": [
        "MicrosoftWindowsServer"
      ],
      "metadata": {
        "description": "See Azure for available ImagePublisher for your Location. Sample Code: <p><a target=new href=https://msitwiki/get-imagepublisher-imageoffer-imagesku-for-arm-templates/>Get-AzureRMVMImagePublisher</a></p> Example: <p>MicrosoftSQLServer or MicrosoftWindowsServer</p>"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "allowedValues": [
        "WindowsServer"
      ],
      "metadata": {
        "description": "See ImagePublisher link for more details."
      }
    },
    "sku": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "See Azure for available ImageSKU for your Location. Sample Code: <p><a target=new href=https://msitwiki/get-imagepublisher-imageoffer-imagesku-for-arm-templates/>Get-AzureRmVMImageSku</a></p> Example: <p>Enterprise, Standard, Web, Express.<p>"
      }
    },
    "DiskConfig": {
      "type": "string",
      "defaultValue": "IIS",
      "allowedValues": [
        "Win",
        "IIS"
      ],
      "metadata": {
        "description": "Used to control the diskconfiguration which includes the intiial drive letters used."
      }
    },
    "DiskCount": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16"
      ],
      "defaultValue": "3",
      "metadata": {
        "description": "Number of Data Disks to be attached to vm."
      }
    },
    "DiskSize": {
      "type": "int",
      "defaultValue": 200,
      "minValue": 10,
      "maxValue": 1024,
      "metadata": {
        "Description": "Size of Data Disk(s) attached to the VM in GB, Min of 10 and Max of 1024"
      }
    },
    "userImageStorageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specify an existing storage account where the VM image(s) will be created, example: mystorage"
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS"
      ],
      "metadata": {
            "description": "Storage performance, Standard_LRS for standard skus and Premium_LRS for premium skus"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "redmond.corp.microsoft.com",
      "allowedValues": [
        "redmond.corp.microsoft.com",
        "partners.extranet.microsoft.com",
        "europe.corp.microsoft.com",
        "northamerica.corp.microsoft.com",
        "fareast.corp.microsoft.com",
        "southpacific.corp.microsoft.com",
        "southamerica.corp.microsoft.com",
        "middleeast.corp.microsoft.com",
        "africa.corp.microsoft.com"
      ],
      "metadata": {
        "description": "The FQDN of the AD domain.  Important! You will need to update VNETRESOURCEGROUP and OUPATH parameters as well if you change from redmond.corp.microsoft.com"
      }
    },
    "CiOwner": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "CiOwner tag for the Virtual Machine. Example: youralias"
      }
    },
    "CiAnalystGroup": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "CiAnalystGroup tag for the Virtual Machine. Please contact your Cloud Lead if you don't know this value.  Format: Config Analyst: Org1 - Org2 -Org3 - Org4"
      }
    },
    "appID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "appID tag for the Virtual Machine."
      }
    },
    "orgID": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "",
      "metadata": {
        "description": "orgID tag for the Virtual Machine."
      }
    },
    "env": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "environment tag for the Virtual Machine."
      }
    },
    "virtualNetwork": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name for the VirtualNetwork"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "ERNetwork",
      "allowedValues": [
        "ERNetwork",
        "ERNetwork-DMZ"
      ],
      "metadata": {
        "description": "Name for the Resource Group that contains VirtualNetwork.  Redmond = ERNetwork; Extranet = ERNetwork-DMZ"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "Name for the subnet"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=redmond,DC=corp,DC=microsoft,DC=com",
      "allowedValues": [
        "OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=redmond,DC=corp,DC=microsoft,DC=com",
        "OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=partners,DC=extranet,DC=microsoft,DC=com",
        "OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=Europe,DC=corp,DC=microsoft,DC=com",
        "OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=NorthAmerica,DC=corp,DC=microsoft,DC=com",
        "OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=Fareast,DC=corp,DC=microsoft,DC=com",
        "OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=southpacific,DC=corp,DC=microsoft,DC=com",
        "OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=southamerica,DC=corp,DC=microsoft,DC=com",
        "OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=middleeast,DC=corp,DC=microsoft,DC=com",
        "OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=africa,DC=corp,DC=microsoft,DC=com"
      ],
      "metadata": {
"description": "<p><b>Redmond:</b></p> <p> OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=redmond,DC=corp,DC=microsoft,DC=com </p> <p><b>Partners:</b></p><p> OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=partners,DC=extranet,DC=microsoft,DC=com </p> <p><b>Europe:</b></p> <p> OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=europe,DC=corp,DC=microsoft,DC=com </p> <p><b>NorthAmerica:</b></p> <p> OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=northamerica,DC=corp,DC=microsoft,DC=com </p> <p><b>Fareast:</b></p> <p> OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=fareast,DC=corp,DC=microsoft,DC=com </p> <p><b>Southpacific:</b></p> <p> OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=southpacific,DC=corp,DC=microsoft,DC=com </p> <p><b>Southamerica:</b></p> <p> OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=southamerica,DC=corp,DC=microsoft,DC=com </p> <p><b>Middleeast:</b></p> <p> OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=middleeast,DC=corp,DC=microsoft,DC=com </p> <p><b>Africa:</b></p> <p> OU=CloudMSVMs,OU=ITManaged,OU=ITServices,DC=africa,DC=corp,DC=microsoft,DC=com </p>"
      }
    },
    "PullServerRegistrationKey": {
      "type": "string",
      "defaultValue": "DtOvyfhxbRkS+kXw9PerJP4RQx48HxCcvKruEyd/vfz2gKplxr+UtJDpsdBjltyDhhMa5As4OGKFb3M+p5vlbQ==",
      "metadata": {
        "description": "The Organizational Unit the VM will join"
      }
    },
    "PullServerRegistrationURI": {
      "type": "string",
      "defaultValue": "https://eus2-agentservice-prod-1.azure-automation.net/accounts/d9886cc8-9990-4461-972b-155d710f1ace",
      "metadata": {
        "description": "The pull server URI"
      }
    },
    "vaultname": {
      "type": "string",
      "defaultValue": "CloudMSArmProdVault",
      "metadata": {
        "description": "The vault Name"
      }
    },
    "vaultkey": {
      "type": "string",
      "defaultValue": "0d9e5aff-35e3-4160-acb1-16e909dab832",
      "metadata": {
        "description": "The Vault key"
      }
    },
    "vaultResourceGroup": {
      "type": "string",
      "defaultValue": "OaaSCSWTOKHSWZPRQP7YEJ3J67FR3Q6VMUSQ6OB7KU5FNQXXMV2EC2SBQQ-East-US",
      "metadata": {
        "description": "The Vault resource Group"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-01-01",

    "branch": "master",
    "folder": "/301-multi-vm-domain-join-WebILB-build-dsc/",
    "baseURL": "[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'),variables('folder'))]",

    "domainJoinzip": "scripts/DomainJoin.ps1.zip",
    "formatDiskszip": "scripts/FormatDataDisk.ps1.zip",
    "formatDiskstemplate": "nested/template-DataDisks.json",
    "createVMtemplate": "nested/template-MultipleVM.json",
    "configurePullTemplate": "nested/template-ConfigureDscPull.json",
    "configurationFunction": "FormatDataDisks.ps1\\FormatDataDisks",
    "Role": "[substring(parameters('DiskConfig'),0,3)]",

    "moduleURL": "[concat(variables('BaseURL'),variables('formatDiskszip'))]",

    "CreateVMUrl": "[concat(variables('BaseURL'),variables('createVMtemplate'))]",
    "FormatDisksUrl": "[concat(variables('BaseURL'),variables('formatDiskstemplate'))]",
    "AttachVMtoPullServerURL": "[concat(variables('BaseURL'),variables('configurePullTemplate'))]",

    "BuildMachineRoleURL": "[concat(variables('BaseURL'),'nested/template-Build',variables('Role'), '.json')]",

    "BuildwebILBCluster": "[concat(variables('BaseURL'),'nested/template-BuildwebILB.json')]",

    "vaultname": "[parameters('vaultname')]",
    "vaultkey": "[parameters('vaultkey')]",

    "AzureAutomation": {
      "Url": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
      "RegistrationKey": "[parameters('PullServerRegistrationKey')]",
      "registrationUrl": "[parameters('PullServerRegistrationURI')]",
      "nodeConfigurationName": "MSITNoPAK.ISRM_GC",
      "configurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
      "timestamp": "1/1/2015"
    }

  },
  "resources": [
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),'-CreateVM')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('CreateVMUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "localAdminUserName": {
            "value": "[parameters('localAdminUserName')]"
          },
          "localAdminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "domainJoinUserName": {
            "value": "[parameters('domainJoinUserName')]"
          },
          "domainJoinPassword": {
            "value": "[parameters('domainJoinPassword')]"
          },
          "localAdmins": {
            "value": "[parameters('localAdmins')]"
          },
          "SQLAdmins": {
            "value": ""
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "AvailabilitySet": {
            "value": "[parameters('AvailabilitySet')]"
          },
          "loadBalancerName": {
            "value": "[parameters('loadBalancerName')]"
          },
          "DiskConfig": {
            "value": "[parameters('DiskConfig')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "DiskCount": {
            "value": "[parameters('DiskCount')]"
          },
          "DiskSize": {
            "value": "[parameters('DiskSize')]"
          },
          "numberOfInstances": {
            "value": "[parameters('numberOfInstances')]"
          },
          "imagePublisher": {
            "value": "[parameters('imagePublisher')]"
          },
          "imageOffer": {
            "value": "[parameters('imageOffer')]"
          },
          "sku": {
            "value": "[parameters('sku')]"
          },
          "userImageStorageAccountName": {
            "value": "[parameters('userImageStorageAccountName')]"
          },
          "StorageAccountType": {
            "value": "[parameters('StorageAccountType')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "CiOwner": {
            "value": "[parameters('CiOwner')]"
          },
          "CiAnalystGroup": {
            "value": "[parameters('CiAnalystGroup')]"
          },
          "appID": {
            "value": "[parameters('appID')]"
          },
          "orgID": {
            "value": "[parameters('orgID')]"
          },
          "env": {
            "value": "[parameters('env')]"
          },
          "virtualNetwork": {
            "value": "[parameters('virtualNetwork')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('vnetResourceGroup')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "ouPath": {
            "value": "[parameters('ouPath')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'))]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "BuildMachineRoleLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('BuildMachineRoleURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(parameters('vmName'),copyindex(1))]"
          },
          "DiskConfig": {
            "value": "[parameters('DiskConfig')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "DiskCount": {
            "value": "[parameters('DiskCount')]"
          },
          "DiskSize": {
            "value": "[parameters('DiskSize')]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/',parameters('vmName'), '-CreateVM')]"
      ]
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat('AttachVMtoPullServer',parameters('DiskConfig'),copyindex(1))]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "AttachVMtoPullServerLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('AttachVMtoPullServerURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(parameters('vmName'),copyindex(1))]"
          },
          "RegistrationKey": {
            "value": "[variables('AzureAutomation').RegistrationKey]"
          },
          "registrationUrl": {
            "value": "[variables('AzureAutomation').registrationUrl]"
          },
          "nodeConfigurationName": {
            "value": "[variables('AzureAutomation').nodeConfigurationName]"
          },
          "timestamp": {
            "value": "[variables('AzureAutomation').timestamp]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/',parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'))]"
      ]
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),'1','-BuildWebILBConfiguration')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('BuildWebILBCluster')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "DeploymentName": {
            "value": "[deployment().name]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "numberOfInstances": {
            "value": "[parameters('numberOfInstances')]"
          },
          "DomainName": {
            "value": "[parameters('domainName')]"
          },
          "WebILBName": {
            "value": "[parameters('loadBalancerName')]"
          },
          "SQLILBName": {
            "value": "none"
          },
          "WebILBUriKey": {
            "reference": {
              "keyVault": {
                "id": "[concat('/subscriptions/',variables('vaultkey'),'/resourceGroups/',parameters('vaultResourceGroup'),'/providers/Microsoft.KeyVault/vaults/', variables('vaultName'))]"
              },
              "secretName": "WebILBUriKey"
            }
          },
          "ILBSubId": {
            "reference": {
              "keyVault": {
                "id": "[concat('/subscriptions/',variables('vaultkey'),'/resourceGroups/',parameters('vaultResourceGroup'),'/providers/Microsoft.KeyVault/vaults/', variables('vaultName'))]"
              },
              "secretName": "ILBSubId"
            }
          },
          "ILBResourceGroup": {
            "reference": {
              "keyVault": {
                "id": "[concat('/subscriptions/',variables('vaultkey'),'/resourceGroups/',parameters('vaultResourceGroup'),'/providers/Microsoft.KeyVault/vaults/', variables('vaultName'))]"
              },
              "secretName": "ILBResourceGroup"
            }
          },
          "ILBAccount": {
            "reference": {
              "keyVault": {
                "id": "[concat('/subscriptions/',variables('vaultkey'),'/resourceGroups/',parameters('vaultResourceGroup'),'/providers/Microsoft.KeyVault/vaults/', variables('vaultName'))]"
              },
              "secretName": "ILBAccount"
            }
          },
          "DashboardURL": {
            "reference": {
              "keyVault": {
                "id": "[concat('/subscriptions/',variables('vaultkey'),'/resourceGroups/',parameters('vaultResourceGroup'),'/providers/Microsoft.KeyVault/vaults/', variables('vaultName'))]"
              },
              "secretName": "DashboardURL"
            }
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/','AttachVMtoPullServer',parameters('DiskConfig'),'1')]"
      ]
    }
  ]
}